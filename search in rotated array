// becareful it's asked to return true or false.
public class Solution {
    public boolean search(int[] A, int target) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(A == null || A.length == 0){
            return false;
        }
        return searchArr(A, 0, A.length - 1, target);
    }
    public boolean searchArr(int[] A, int start, int end, int target){
        int mid = (start + end)/2;
        if(A[mid] == target){
            return true;
        }
        if(start > end){
            return false;
        }
        if(A[mid] > A[start]){
            if(target <= A[mid] && target >= A[start]){
                return searchArr(A, start, mid - 1, target);
            }else{
                return searchArr(A, mid + 1, end, target);
            }
        }else if(A[mid] < A[start]){
            if(target >= A[mid] && target <= A[end]){
                return searchArr(A, mid + 1, end, target);
            }else{
                return searchArr(A, start, mid - 1, target);
            }
        }else if(A[start] == A[mid]){
            if(A[end] != A[mid]){
               return searchArr(A, mid + 1, end, target);
            }else{
                if(searchArr(A, mid + 1, end, target) == false){
                    return searchArr(A, start, mid - 1, target);
                }else{
                    return true;   // don't forget this situation, when searchArr(A, mid + 1, end, target) == true
                }
            }
        }
        return false;
        
    }
}

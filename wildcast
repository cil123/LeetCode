//use 2-d dp now but still cannot pass boj. what's the problem!!!!

public class Solution {
    public boolean isMatch(String s, String p) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(s == null || p == null){
            return false;
        }
        
        int slen = s.length();
        int plen = p.length();
        boolean[][] dp = new boolean[slen + 1][plen + 1];
        dp[0][0] = true;
        
       // for(int i = 1; i <= slen; i++){
    //        dp[i][0] = false;
      //  }
        
        for(int i = 1; i <= plen; i++){
            if(p.charAt(i - 1) == '*'){
                if( dp[0][i - 1]== true){
                   dp[0][i] = true;
                } 
            }
        }
        
        for(int i = 1; i <= s.length(); i++){
            for(int j = 1; j <= p.length(); j++){
                if((p.charAt(j - 1) == '?' || s.charAt(i - 1) == p.charAt(j - 1)) && dp[i - 1][j - 1] == true){
                    dp[i][j] = true;
                }else if(p.charAt(j - 1) == '*'){
                    for(int k = 0; k < i; k++){
                        if(dp[k][j - 1] == true){
                            dp[i][j] = true;
                            break;
                        }
                        if(dp[i][j - 1] == true){
                            dp[i][j] = true;
                        }
                    }
                }
            }
        }
        return dp[slen][plen];
    }
}

public class Solution {
    public int ladderLength(String start, String end, HashSet<String> dict) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(dict.isEmpty()){
            return 0;
        }
        
        int len = 0;
        int step = 0;
        int len2 = 0;
        Queue<String> q = new LinkedList<String>();
        HashSet<String> visited = new HashSet<String>();
        q.add(start);
        visited.add(start);
        len = 1;
        
        while(!q.isEmpty){
            String st = q.poll();
            ArrayList<String> set = getWord(st);
            len--;
            
            for(String cur : set){
                if(cur == end){
                    step++;
                    return step;
                }else{
                
                if(dict.contains(cur) && !visited.contains(cur)){
                     q.add(cur);
                     visited.add(cur);
                     len2++;
                }
                
                if(len == 0){
                   step++;
                   len = len2;
                   len2 = 0;
                }
           return 0;    
        }
        
    }
    public ArrayList<String> getWord(st){
        ArrayList<String> ret = new ArrayList<String>();
        int length = st.length();
        char[] ch = st.toCharArray();
        for(int i = 0; i < length; i++){
            for(int j = 0; j < 26; j++){
                ch[i] = (char)('a' + j);
                ret.add(new String(ch));
            }
        }
        return ret;
    }
}

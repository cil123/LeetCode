import java.util.*;

public class Solution {
    public int ladderLength(String start, String end, HashSet<String> dict) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(dict.isEmpty()){
            return 0;
        }
        if(start.equals(end)){
            return 1;
        }
        int len = 1;
        int step = 0;
        int len2 = 0;
        Queue<String> q = new LinkedList<String>();
        HashSet<String> visited = new HashSet<String>();
        q.add(start);
        visited.add(start);
        
        while(!q.isEmpty()){
            String st = q.poll();
            len--;
            
            if(st.equals(end)){
               step = step + 1;
               return step;
            }else{
            ArrayList<String> list = getWord(st);
              for(String cur : list){
                 if(dict.contains(cur) && !visited.contains(cur)){
                     q.add(cur);
                     visited.add(cur);
                     len2++;
                 }
              }
        }
            if(len == 0){

                len = len2;
                len2 = 0;
              } 
        }
        return 0;
        
    }
    public ArrayList<String> getWord(String st){
        ArrayList<String> ret = new ArrayList<String>();
        int length = st.length();
        char[] ch = st.toCharArray();
        for(int i = 0; i < length; i++){
            for(int j = 0; j < 26; j++){
                ch[i] = (char)('a' + j);
                ret.add(new String(ch));
            }
        }
        return ret;
    }
}

// still some small bugs checked for a long time....
//tested version
//O(n)
public class Solution {
    public int maxProfit(int[] prices) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(prices == null || prices.length == 0){
            return 0;
        }
        int ret = 0;
        int[] left = new int[prices.length];
        int[] right = new int[prices.length];
        
        int min = prices[0];
        int pro1 = 0;
        
        for(int i = 1; i < prices.length; i++){
            if(pro1 < prices[i] - min){
                pro1 = prices[i] - min;
            }
            if(prices[i] < min){
                min = prices[i];
            }
            left[i] = pro1;
        }
        int max = prices[prices.length - 1];
        int pro2 = 0;
        for(int i = prices.length - 2; i >= 0; i--){
            if(pro2 < max - prices[i]){
                pro2 = max - prices[i];
            }
            if(prices[i] > max){
                max = prices[i];
            }
            right[i] = pro2;
        }
        
        for(int i = 0; i < prices.length; i++){
            if(left[i] + right[i] > ret){
                ret = left[i] + right[i];
            }
        }
        return ret;
    }
}

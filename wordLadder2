import java.util.*;
public class Solution {
    public ArrayList<ArrayList<String>> findLadders(String start, String end, HashSet<String> dict) {
        // Start typing your Java solution below
        // DO NOT write main() function
        ArrayList<ArrayList<String>> ret = new ArrayList<ArrayList<String>>();
        
        if(dict.isEmpty()){
            return ret;
        }
        
        int len = 1;
        int len2 = 0;
        Queue<String> q = new LinkedList<String>();
        HashSet<String> visited = new HashSet<String>();
        q.add(start);
        visited.add(start);
        Queue<ArrayList<String>> qlist = new LinkedList<ArrayList<String>>();
        ArrayList<String> first = new ArrayList<String>();
        first.add(start);
        qlist.add(first);
        boolean flag = false;
        
        while(!q.isEmpty()){
            String st = q.poll();
            ArrayList<String> arrlist = qlist.poll();
            len--;
            
            if(st.equals(end)){
               flag = true;
               ret.add(arrlist);
            }else{
            ArrayList<String> list = getWord(st);
              for(String cur : list){
                 boolean f = true;
                 
                for(int k = 0; k < arrlist.size(); k++){
                   if(cur.equals(arrlist.get(k))){
                      f = false;
                      break;
                      }
                }
                 if(dict.contains(cur) && !visited.contains(cur) && f){
                     q.add(cur);
                     visited.add(cur);
                     ArrayList<String> temp = new ArrayList<String>(arrlist);
                     temp.add(cur);
                     qlist.add(temp);
                     len2++;
                 }
              }
        }
            if(len == 0){
               if(flag == true){
                  return ret;
                  }
                len = len2;
                len2 = 0;
              } 
        }
        return ret;
        
    }
    public ArrayList<String> getWord(String st){
        ArrayList<String> ret = new ArrayList<String>();
        int length = st.length();
        char[] ch = st.toCharArray();
        for(int i = 0; i < length; i++){
            for(int j = 0; j < 26; j++){
                ch[i] = (char)('a' + j);
                ret.add(new String(ch));
                ch = st.toCharArray();
            }
        }
        return ret;
    }
}

//use recursion. Will try another method.

/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isSymmetric(TreeNode root) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(root == null){
            return true;
        }
        
        return isPairs(root.left, root.right);
    }
    public boolean isPairs(TreeNode node1, TreeNode node2){
        if(node1 == null && node2 == null){
            return true;
        }
        if(node1 == null || node2 == null){
            return false;
        }
        
        if(node1.val != node2.val){
            return false;
        }
        
        return isPairs(node1.left, node2.right) && isPairs(node1.right, node2.left);
    }
}
